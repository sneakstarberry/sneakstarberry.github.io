<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://sneakstarberry.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://sneakstarberry.github.io/" rel="alternate" type="text/html" /><updated>2020-05-25T14:41:07+09:00</updated><id>http://sneakstarberry.github.io/feed.xml</id><title type="html">KiHongPark’s Tech Blog</title><subtitle>This is a blog of someone passionate about technology who wants to share some of the things he knows about Application Development, Integration, Cloud, Big Data and Digital Transformation</subtitle><author><name>http://www.linkedin.com/in/alainpham</name></author><entry><title type="html">[C++]백준 11657</title><link href="http://sneakstarberry.github.io/posts/nojam11657/" rel="alternate" type="text/html" title="[C++]백준 11657" /><published>2020-05-23T11:20:00+09:00</published><updated>2020-05-23T11:20:00+09:00</updated><id>http://sneakstarberry.github.io/posts/nojam11657</id><content type="html" xml:base="http://sneakstarberry.github.io/posts/nojam11657/">&lt;p&gt;[C++]백준 11657 타임머신 입니다. 벨만-포드 알고리즘을 사용합니다.&lt;/p&gt;

&lt;h1 id=&quot;c백준-11657---타임머신&quot;&gt;[C++]백준 11657 - 타임머신&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images//posts/nojam11657/top.jpg&quot; alt=&quot;Alt FileTree&quot; /&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;벨만-포드 알고리즘을 이용하여 푸는 문제입니다. &lt;br /&gt;
솔직히 벨만-포드 알고리즘이 어떤 알고리즘인지 모르고 문제를 접하였고 알고리즘을 
검색해 보았습니다.&lt;/p&gt;

&lt;p&gt;벨만-포드 알고리즘을 이해한 후 알고리즘에 따라 문제를 풀었습니다.&lt;/p&gt;

&lt;p&gt;벨만-포드 알고리즘은 최소 값을 구하는 알고리즘인데 다익스트라와 다른 점은 음수 사이클의
  노드를 알 수 있다는 점에 있습니다. 이를 통해 음수로 무한히 가는 경우에는 “-1”을
  출력 시켜줄 수 있었습니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define endl &quot;\n&quot;
#define MAX 501
#define INF 1&amp;lt;&amp;lt;30
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 입력 부분&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 벨만-포드 알고리즘 시작 N-1만큼 모든 수 탐색&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 음수 사이클인 노드 확인&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 외딴 노드와 최솟값 출력&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>http://www.linkedin.com/in/alainpham</name></author><category term="Algorithm" /><category term="C++" /><summary type="html">[C++]백준 11657 타임머신 입니다. 벨만-포드 알고리즘을 사용합니다. [C++]백준 11657 - 타임머신</summary></entry><entry><title type="html">[C++]백준 4949</title><link href="http://sneakstarberry.github.io/posts/nojam4949/" rel="alternate" type="text/html" title="[C++]백준 4949" /><published>2020-05-22T11:20:00+09:00</published><updated>2020-05-22T11:20:00+09:00</updated><id>http://sneakstarberry.github.io/posts/nojam4949</id><content type="html" xml:base="http://sneakstarberry.github.io/posts/nojam4949/">&lt;p&gt;백준 4949 균형잡힌 세상문제 입니다.&lt;/p&gt;

&lt;h1 id=&quot;백준-4949---균형잡힌-세상&quot;&gt;백준 4949 - 균형잡힌 세상&lt;/h1&gt;
&lt;p&gt;대괄호(“[]”)와 소괄호(“()”)가 서로 짝이 맞춰져 있는지 확인하는 프로그램입니다.&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt;로 계속 반복을 하면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;getline&lt;/code&gt; 함수로 문자열을 받아와 줍니다. “.”ㅇㄹ 만나게 되면 멈춥니다. 
 먼저 왼쪽 괄호는 소괄호든 대괄호든 상관이 없습니다. 둘 다 스택에 넣어줍니다. 이후 오른쪽 괄호를 만났을 때가 중요합니다. 이미 들어가 있는 것이 소괄호인데 오른쪽 대괄호를 만났다면 이는 균형이 맞지 않는 것입니다. 이와 반대의 경우도 마찬가지 입니다. 바로 no를 출력하면 되겠습니다. 
  하지만 똑같이 소괄호라면 pop메소드를 이용하여 빼주시고 같은행동을 반복합니다. 끝까지 &lt;code class=&quot;highlighter-rouge&quot;&gt;flag&lt;/code&gt; 변수가 0이라면 &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;를 출력시켜 줍니다.
   나머지는 반복입니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cstring&amp;gt;
#include &amp;lt;stack&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'['&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;')'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'('&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;no&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;']'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'['&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;no&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;no&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yes&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>http://www.linkedin.com/in/alainpham</name></author><category term="Algorithm" /><category term="C++" /><summary type="html">백준 4949 균형잡힌 세상문제 입니다. 백준 4949 - 균형잡힌 세상 대괄호(“[]”)와 소괄호(“()”)가 서로 짝이 맞춰져 있는지 확인하는 프로그램입니다.</summary></entry><entry><title type="html">[공지] 포스트 작성법</title><link href="http://sneakstarberry.github.io/posts/posting/" rel="alternate" type="text/html" title="[공지] 포스트 작성법" /><published>2020-04-03T02:50:00+09:00</published><updated>2020-04-03T02:50:00+09:00</updated><id>http://sneakstarberry.github.io/posts/posting</id><content type="html" xml:base="http://sneakstarberry.github.io/posts/posting/">&lt;p&gt;포스트를 작성하는 방법에 대하여 알려드리도록 하겠습니다.
이후 내용에 따라 포스트를 작성 하시면 됩니다.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;github-클론&quot;&gt;Github 클론&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/DSC-Sahmyook/DSC-Sahmyook.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;깃 클론을 하기 앞서 클론을 받을 새로운 폴더를 생성해줍니다.&lt;/p&gt;

&lt;p&gt;생성 후 위 명령어를 통해 깃에서 블로그 페이지를 클론 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;(만일 git이 설치되어 있지 않을 시 &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;링크&lt;/a&gt;를 통해 다운을 받으시길 바랍니다.)&lt;/p&gt;

&lt;h2 id=&quot;파일트리&quot;&gt;파일트리&lt;/h2&gt;

&lt;p&gt;클론이 완료되면 다음과 같은 파일트리를 가지게 될 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images//posts/posting/filetree.png&quot; alt=&quot;Alt FileTree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt;폴더에 집중해 주시길 바랍니다.&lt;/p&gt;

&lt;h2 id=&quot;포스트-파일이름과-assets폴더-이름-설정&quot;&gt;포스트 파일이름과 assets폴더 이름 설정&lt;/h2&gt;

&lt;p&gt;이 포스트 작성법 포스트를 예시로 삼아 설명드리도록 하겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;먼저 다음 이미지와 같이 이름을 맞춰줍니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images//posts/posting/same_name.png&quot; alt=&quot;Alt FileTree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;포스트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;작성일자-포스트제목.md&lt;/code&gt;양식으로 적어 주시면 됩니다. (&lt;code class=&quot;highlighter-rouge&quot;&gt;Year-Month-Day-title.md&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt;내부 위 폴더와 같은 위치인 파일트리의 &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt;에서 포스트 제목과 같은 이름의 폴더를 생성합니다.&lt;/p&gt;

&lt;p&gt;(위 사진을참고 해 주시면 감사하겠습니다.)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;헤더 이미지 작성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;포스트에 보면 아래 이미지와 같이 헤더 이미지가 있습니다. 이는 넣어도 되고 넣지 않으셔도 괜찮습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images//posts/posting/top-img.png&quot; alt=&quot;Alt FileTree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만일 이미지를 넣지 않으신다면 이 부분은 넘어가셔도 좋습니다.&lt;/p&gt;

&lt;p&gt;만일 헤더 이미지를 넣으신다면 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images//posts/posting/top_example.png&quot; alt=&quot;Alt FileTree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt;에 포스트 제목과 같은 이름으로 만든 폴더를 열어 줍니다. 이 폴더 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;top.jpg&lt;/code&gt;(파일은 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;jpg&lt;/code&gt;여야합니다.)사진 파일을 위 사진과 같이 저장해 줍니다.  그렇다면 자동적으로 사진이 적용될 것입니다.&lt;/p&gt;

&lt;p&gt;ps. 사진 크기를 조정하지 않으면 전체화면에서 사진 크기가 이상해집니다. &lt;del&gt;css한지 너무 오래되어서….. 부탁드립니다….&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&quot;포스트-작성법&quot;&gt;포스트 작성법&lt;/h2&gt;

&lt;p&gt;자! 위와 같은 세팅이 전부 완료 되었다면 이제 정말로 포스트를 작성해야겠죠?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;먼저 제목을 설정해줍니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;다음과 같은 양식으로 제목을 설정합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
// 어떤 레이아웃을 이용할 것인지?
layout: default
// 포스트 제목은 파일이름과 같지 않아도 됩니다.
title: &quot;[공지] 포스트 작성법&quot;
//작성시간
date: 2020-04-02 05:00:00 +0200
published: 2020-04-02 05:00:00 +0200
// 댓글 작성을 허가할 것인지(true, false)
comments: true
// 어떤 카테고리인지?
categories: development
// 태그는 정해져 있는 것이 아닌 관련 기술을 마음 껏 기술해주세요.(예시: [Docker, Go, Web])
tags: [test,test2]
// 본인 깃허브 주소 혹은 포스트에서 기술한 코드의 깃허브 레파지토리 주소
github: &quot;https://github.com/DSC-Sahmyook/&quot;
// 이미지를 넣을 것인지 아닌지 기본적으로 false인 듯 합니다.
# noimage: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;이후에는 요약 글을 설정해주어야 합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
github: &quot;https://github.com/sneakstarberry/&quot;
# noimage: true
---
포스트를 작성하는 방법에 대하여 알려드리도록 하겠습니다.
이후 내용에 따라 포스트를 작성 하시면 됩니다.
&amp;lt;!--more--&amp;gt;

## Github 클론
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 제목이 끝난 줄에 붙여서 작성을 해주시고 끝난 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;를 붙여서 끝났다는 것을 명시해 주시기 바랍니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;이후 마크다운 문법에 따라 작성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이후에는 마크다운 문법에 따라서 작성을 하면되는데 일반적인 마크다운과는 살짝 다른 &lt;code class=&quot;highlighter-rouge&quot;&gt;kramdown&lt;/code&gt;문법을 사용하고 있습니다. &lt;a href=&quot;https://kramdown.gettalong.org/quickref.html&quot;&gt;링크&lt;/a&gt;를 참조하여 작성을 하시면 될 것 같습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사진 삽입&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;마크다운 문법에 따라 사진 삽입을 하면 되지만 외부 사진이 아닌 로컬에 올린 사진을 이용하려면 사진 경로 설정이 약간 다릅니다.&lt;/p&gt;

&lt;p&gt;다음 사진은 이 포스트의 헤더에 쓰인 사진입니다. 이 사진을 예시로 설명드리도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images//posts/posting/top.jpg&quot; alt=&quot;Alt HeaderImg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 사진과 같이 로컬에서 사진을 불러서 쓰고 싶다면 정확히 다음과 같이 쓰면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Alt HeaderImg](/assets/images//posts/posting/top.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 위 코드를 분석해 보자&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Alt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;사진&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;설명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//posts/posting/&amp;lt;올린 이미지 이름&amp;gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/posts/포스트-작성법&lt;/code&gt;은 중괄호 두번으로 감싸고 &lt;code class=&quot;highlighter-rouge&quot;&gt;page.id&lt;/code&gt;라고 적으면 조금이나마 줄여서 쓸 수 있다.&lt;/p&gt;

&lt;p&gt;기본적으로 &amp;lt;&amp;gt;사이에 들어있는 항목만 변환시켜주면 된다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Alt&lt;/code&gt;이후에는 사진이 로딩이 안될 때를 대비하거나 시각 장애인을 위해 사진을 설명해주는 줄임말을 넣어준다.&lt;/p&gt;

&lt;p&gt;이후 사진 경로를 정해줄때는 경로 마지막에 내가 assets에 넣어둔 사진 이미지 이름을 확장명까지 적어 줍니다.&lt;/p&gt;

&lt;p&gt;중간에 &lt;code class=&quot;highlighter-rouge&quot;&gt;page.id&lt;/code&gt;는 폴더 경로가 함축된 것으로 /posts/&lt;폴더이름&gt;으로 구성되어 있다. 즉, 내가 /assets/images/posts의 다른 폴더에서 사진을 가져 오고 싶다면 /assets/images/posts/&lt;폴더이름&gt;으로 설정하면된다.  아래와 같이 말이다.&lt;/폴더이름&gt;&lt;/폴더이름&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;코드
![Alt Example](/assets/images/posts/example-page/top.jpg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/example-page/top.jpg&quot; alt=&quot;Alt Example&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;끝--디자인을-바꾸고-싶거나-보충내용이-있다면-언제나-환영입니다--제발-디자인-좀--그리고-깃-푸쉬한다고-바로-적용되진-않고-약간-텀이-있습니다-약간&quot;&gt;끝!!!  디자인을 바꾸고 싶거나 보충내용이 있다면 언제나 환영입니다.  &lt;del&gt;제발 디자인 좀…&lt;/del&gt;  그리고 깃 푸쉬한다고 바로 적용되진 않고 약간 텀이 있습니다. &lt;del&gt;약간….&lt;/del&gt;&lt;/h3&gt;</content><author><name>http://www.linkedin.com/in/alainpham</name></author><category term="test" /><category term="test2" /><summary type="html">포스트를 작성하는 방법에 대하여 알려드리도록 하겠습니다. 이후 내용에 따라 포스트를 작성 하시면 됩니다.</summary></entry><entry><title type="html">Example-Page</title><link href="http://sneakstarberry.github.io/posts/example-page/" rel="alternate" type="text/html" title="Example-Page" /><published>2020-04-02T22:20:00+09:00</published><updated>2020-04-02T22:20:00+09:00</updated><id>http://sneakstarberry.github.io/posts/example-page</id><content type="html" xml:base="http://sneakstarberry.github.io/posts/example-page/">&lt;p&gt;hello every one&lt;/p&gt;
&lt;h1 id=&quot;rest-api에-대하여&quot;&gt;REST-API에 대하여&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images//posts/example-page/top.jpg&quot; alt=&quot;Alt network&quot; /&gt;
/posts/example-page
When using Apache Camel with Quarkus as of today, we are limited number of Camel connectors. One important one being
the Apache Kafka connector.
The Kafka connector provided through the Smallrye Kafka Extension is available for Quarkus though. So in this
article, I will show how to
wire Smallrye Kafka connector and Camel together.
We will also be using the camel-servlet component to reuse the undertow http endpoint provided by Quarkus and to
spice things up a little we will use the XML DSL of Camel.
All of this will be natively compiled in the end.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;test-title-1&quot;&gt;Test Title 1&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tellus in metus vulputate eu scelerisque felis imperdiet proin fermentum. Maecenas ultricies mi eget mauris pharetra et ultrices neque. Mauris pellentesque pulvinar pellentesque habitant. Pulvinar etiam non quam lacus suspendisse faucibus interdum posuere lorem. Nec sagittis aliquam malesuada bibendum. Pharetra massa massa ultricies mi quis hendrerit. In hac habitasse platea dictumst. Turpis massa tincidunt dui ut ornare lectus sit. Egestas purus viverra accumsan in nisl nisi scelerisque. Vel pharetra vel turpis nunc eget lorem dolor sed. Sit amet tellus cras adipiscing enim. At varius vel pharetra vel turpis nunc eget. Facilisis magna etiam tempor orci. Volutpat lacus laoreet non curabitur gravida arcu ac tortor dignissim.&lt;/p&gt;

&lt;p&gt;Pharetra pharetra massa massa ultricies mi quis hendrerit. Pellentesque pulvinar pellentesque habitant morbi tristique senectus et netus et. Suscipit tellus mauris a diam maecenas sed enim ut. At consectetur lorem donec massa sapien faucibus et molestie. Amet est placerat in egestas erat imperdiet sed euismod nisi. A diam maecenas sed enim ut sem viverra aliquet. Tristique magna sit amet purus gravida quis blandit turpis. Ut eu sem integer vitae justo eget magna. Urna nec tincidunt praesent semper feugiat. Commodo odio aenean sed adipiscing diam donec adipiscing tristique risus. Nisi lacus sed viverra tellus in hac habitasse platea dictumst. Quisque non tellus orci ac auctor. Orci ac auctor augue mauris. Eu volutpat odio facilisis mauris. Scelerisque viverra mauris in aliquam sem fringilla ut morbi tincidunt. Dolor purus non enim praesent elementum facilisis leo. Nibh nisl condimentum id venenatis. Sollicitudin ac orci phasellus egestas tellus rutrum tellus pellentesque.&lt;/p&gt;

&lt;p&gt;Risus in hendrerit gravida rutrum quisque. Eleifend donec pretium vulputate sapien nec. Sed viverra tellus in hac habitasse platea dictumst vestibulum. Tortor at auctor urna nunc. Vestibulum mattis ullamcorper velit sed ullamcorper morbi. Sed egestas egestas fringilla phasellus faucibus scelerisque eleifend donec. Quisque sagittis purus sit amet volutpat. Nullam ac tortor vitae purus. Arcu risus quis varius quam quisque id. Quis imperdiet massa tincidunt nunc. Ut diam quam nulla porttitor.&lt;/p&gt;

&lt;p&gt;Ac turpis egestas sed tempus urna et pharetra. Odio eu feugiat pretium nibh ipsum consequat nisl vel pretium. Placerat in egestas erat imperdiet sed. Tortor at risus viverra adipiscing at in tellus integer feugiat. Mauris sit amet massa vitae tortor condimentum lacinia quis. Lectus vestibulum mattis ullamcorper velit sed ullamcorper morbi tincidunt. Sem integer vitae justo eget magna. Suspendisse interdum consectetur libero id. Vulputate enim nulla aliquet porttitor lacus luctus accumsan. Mattis ullamcorper velit sed ullamcorper morbi tincidunt ornare.&lt;/p&gt;

&lt;p&gt;Sed vulputate mi sit amet mauris commodo. Volutpat maecenas volutpat blandit aliquam etiam erat velit scelerisque in. Eu sem integer vitae justo eget magna fermentum iaculis eu. Quis ipsum suspendisse ultrices gravida. Tincidunt eget nullam non nisi est. Aliquam purus sit amet luctus venenatis lectus magna. Feugiat nisl pretium fusce id. Ipsum dolor sit amet consectetur adipiscing elit. Eu turpis egestas pretium aenean pharetra magna ac placerat vestibulum. Bibendum ut tristique et egestas quis ipsum suspendisse ultrices. At elementum eu facilisis sed odio. Tellus in metus vulputate eu scelerisque felis imperdiet. Quis commodo odio aenean sed adipiscing diam donec adipiscing. Morbi tincidunt augue interdum velit. Ut morbi tincidunt augue interdum velit euismod in pellentesque massa. Commodo quis imperdiet massa tincidunt.&lt;/p&gt;
&lt;h3 id=&quot;test-title-2&quot;&gt;Test title 2&lt;/h3&gt;

&lt;p&gt;ffdfds&lt;/p&gt;

&lt;h2 id=&quot;testsss&quot;&gt;Testsss&lt;/h2&gt;</content><author><name>http://www.linkedin.com/in/alainpham</name></author><category term="test" /><category term="test2" /><summary type="html">hello every one REST-API에 대하여 /posts/example-page#excerpt When using Apache Camel with Quarkus as of today, we are limited number of Camel connectors. One important one being the Apache Kafka connector. The Kafka connector provided through the Smallrye Kafka Extension is available for Quarkus though. So in this article, I will show how to wire Smallrye Kafka connector and Camel together. We will also be using the camel-servlet component to reuse the undertow http endpoint provided by Quarkus and to spice things up a little we will use the XML DSL of Camel. All of this will be natively compiled in the end.</summary></entry><entry><title type="html">Quarkus Camel, First Impressions on a Game Changing Framework</title><link href="http://sneakstarberry.github.io/posts/quarkus-camel-first-impressions-on-a-game-changing-framework/" rel="alternate" type="text/html" title="Quarkus Camel, First Impressions on a Game Changing Framework" /><published>2019-07-04T12:00:00+09:00</published><updated>2019-07-04T12:00:00+09:00</updated><id>http://sneakstarberry.github.io/posts/quarkus-camel-first-impressions-on-a-game-changing-framework</id><content type="html" xml:base="http://sneakstarberry.github.io/posts/quarkus-camel-first-impressions-on-a-game-changing-framework/">&lt;p&gt;
    On March 07, 2019 Red Hat &amp; the JBoss Community announced Quarkus. It is a Java framework that enables ultra low
    boot
    times and tiny
    memory footprint for applications and services. It does that by taking advantage of GraalVM's native compilation
    capabilities to produce an executable out of your Java code. Why is this considered to be a game
    changer ?
    In this article I will give my view and first impressions on this framework as someone who spends
    a bit of time writing applications and services. I will get my hands dirty by building a
    working Quarkus + Apache Camel example.
&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;What's the big deal about Quarkus?&lt;/h2&gt;

&lt;p&gt;When Quarkus was announced 1 week ago, many have commented that this is a game changer for the future of
    Java Application
    Development. I must say that I have rarely been so excited about a project as I am right now for Quarkus !
    So what's the big deal here ?
&lt;/p&gt;

&lt;p&gt; The official website quarkus.io states that Quarkus can be qualified as &quot;Supersonic Subatomic Java&quot;. It is a &quot;A
    Kubernetes Native Java stack tailored for GraalVM &amp; OpenJDK HotSpot, crafted from the best of breed Java libraries
    and standards&quot;.
&lt;/p&gt;

&lt;h3&gt;The existing Java ecosystem&lt;/h3&gt;
&lt;p&gt;
    To understand the huge value that Quarkus brings, we have to take a step back and get in the shoes of a typical
    Enterprise Dev Team.
    Java has been so broadly adopted that it has become the default technology for application
    development in
    many organizations.
    Throughout the years a huge ecosystem of tools and libraries flourished around Java to solve all kinds
    of challenges and problems.
&lt;/p&gt;

&lt;h3&gt;The adoption of containers combined with Java&lt;/h3&gt;

&lt;p&gt;
    The recent adoption of Containers and Kubernetes has lead to a wave of
    innovation around workload orchestration and scheduling.
    Still, organizations wanted to keep leveraging the expertise around Java their developers have acquired.
    It became a natural practice to put Java applications and micro services into containers to get the best of both
    worlds. Organizations wanted a rich ecosystem
    of libraries and all the innovations around container orchestration at the same time.
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&quot;/assets/images//posts/quarkus-camel-first-impressions-on-a-game-changing-framework/os-container-jvm-app-stack.svg&quot;&gt; &lt;img
	class=&quot;center-block img-responsive&quot;
	src=&quot;/assets/images//posts/quarkus-camel-first-impressions-on-a-game-changing-framework/os-container-jvm-app-stack.svg&quot; alt=&quot;os container jvm app stack&quot;/&gt;&lt;/a&gt;

&lt;/p&gt;
&lt;h3&gt;The paradigm shift needed for Java to exist in the world of Containers&lt;/h3&gt;


&lt;p&gt;
    When a micro service needs to be scaled up and down quickly is when Java shows some weakness.
    In fact Java has not been designed for being a short lived process that might be scheduled anywhere on a
    distributed infrastructure.
    It has rather been designed and optimized to run application servers for a long time and taking up all the
    resources
    available on a VM or a bare metal server.
    The boot time was not such a critical constraint. In usual Java application the boot time of 4 to 10 seconds
    (and even more) was
    entirely acceptable. The initial memory footprint is usually also negligible due to the fact that a large amount of memory 
    would be dedicated to the application server anyway.
&lt;/p&gt;

&lt;p&gt;
    The paradigm has shifted in the world of containers and Kubernetes. The boot time has become highly critical. A low boot time 
    is what would allow a service to scale up and down quickly and achieve higher
    workload density on cloud infrastructures. A minimal initial memory footprint per instance is what would
    allow the service to start small and be scaled efficiently when needed.
    In the extreme case, when considering the rise of Functions as a Service booting up quickly becomes even more critical. 
    In this case we aim at scaling the service down to zero instances when there are no requests and starting
    it only when client requests are coming in.
    We can see here that the boot time needs to be several orders of magnitude lower than what we are used to.
&lt;/p&gt;

&lt;p&gt;
    &lt;a href=&quot;/assets/images//posts/quarkus-camel-first-impressions-on-a-game-changing-framework/scaling-up.svg&quot;&gt; &lt;img
        class=&quot;center-block img-responsive&quot;
        src=&quot;/assets/images//posts/quarkus-camel-first-impressions-on-a-game-changing-framework/scaling-up.svg&quot; alt=&quot;scaling up from 0&quot;/&gt;&lt;/a&gt;
    &lt;/p&gt;

&lt;h3&gt;Quarkus to the rescue&lt;/h3&gt;
&lt;p&gt;
    Given this context, we can now better understand the value that Quarkus brings.
    In short, it's a framework that enables dev teams to use widely adopted Java libraries to build applications that
    have an extreme low boot time and low initial memory footprint.
    Quarkus takes advantage of GraalVM to compile java projects into a native executable that can just run.
&lt;/p&gt;

&lt;h2&gt;Get started : build a hello world&lt;/h2&gt;
&lt;p&gt;Now lets go ahead and build our first hello world to see how it performs.&lt;/p&gt;
&lt;h3&gt;
    Create a simple project using the quarkus-maven-plugin
&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mvn io.quarkus:quarkus-maven-plugin:0.11.0:create &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-DprojectGroupId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;techlab &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-DprojectArtifactId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;quarkus-hello-world &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-DclassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;techlab.GreetingResource&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-Dpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/hello&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
    This is the structure of the project :
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;|-- pom.xml
|-- quarkus.log
|-- src
| |-- main
| | |-- docker
| | | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; Dockerfile
| | |-- java
| | | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; techlab
| | | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; GreetingResource.java
| | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; resources
| | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; META-INF
| | |-- microprofile-config.properties
| | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; resources
| | &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; index.html&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
    The dependencies are pretty minimalist and clean since most of it is taken care of by the quarkus bom and plugins.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.quarkus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;quarkus-bom&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${quarkus.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
....
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.quarkus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;quarkus-resteasy&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.quarkus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;quarkus-arc&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.quarkus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;quarkus-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${quarkus.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p&gt;
    The plugin creates a simple project with a rest service operation returning hello as you can see in the file
    GreetingResource.java.
    It is pretty much the only thing that needs to be done here to have a running service. Quarkus is rather an
    opinionated framework that aims at accelerating development using configuration files and annotations.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;techlab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.ws.rs.GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.ws.rs.Path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.ws.rs.Produces&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.ws.rs.core.MediaType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GreetingResource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@GET&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Produces&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TEXT_PLAIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;Let's run and test the project&lt;/h3&gt;

&lt;p&gt;
    Now lets go ahead and run this project to see how fast it actually boots up.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mvn compile quarkus:dev&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;apham@aplinux quarkus-hello-world]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn compile quarkus:dev
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Scanning &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;projects...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] &lt;span class=&quot;nt&quot;&gt;------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Building quarkus-hello-world 1.0-SNAPSHOT
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] &lt;span class=&quot;nt&quot;&gt;------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; maven-resources-plugin:2.6:resources &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default-resources&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; @ quarkus-hello-world &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Using &lt;span class=&quot;s1&quot;&gt;'UTF-8'&lt;/span&gt; encoding to copy filtered resources.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Copying 2 resources
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; maven-compiler-plugin:3.1:compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default-compile&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; @ quarkus-hello-world &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Nothing to compile - all classes are up to &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; quarkus-maven-plugin:0.11.0:dev &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default-cli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; @ quarkus-hello-world &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Using servlet resources /home/workdrive/TAZONE/WORKSPACES/ws-quarkus/quarkus-hello-world/src/main/resources/META-INF/resources
Listening &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;transport dt_socket at address: 5005
2019-03-17 23:10:29,640 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.dep.QuarkusAugmentor] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Beginning quarkus augmentation
2019-03-17 23:10:29,980 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.dep.QuarkusAugmentor] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus augmentation completed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;340ms
2019-03-17 23:10:30,155 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus 0.11.0 started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.602s. Listening on: http://127.0.0.1:8080
2019-03-17 23:10:30,156 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed features: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cdi, resteasy]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
    We should bare in mind that here we are using the OpenJDK HotSpot and are not yet compiling our project to a native executable.
    The results are already pretty remarkable as I could observe a boot time of 60.2 milliseconds.
&lt;/p&gt;

&lt;h3&gt;
    Compile to native executable and run
&lt;/h3&gt;

&lt;p&gt;
    In order to compile the project we need to setup GraalVM. 
    Download the VM from the following website &lt;a href=&quot;http://www.graalvm.org/downloads/&quot;&gt;http://www.graalvm.org/downloads/&lt;/a&gt;.
    Extract the package somewhere and set the env variable GRAALVM_HOME to point to the root of its folder.
&lt;/p&gt;
&lt;p&gt;
    Now we can run the following command to build a native executable.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mvn package &lt;span class=&quot;nt&quot;&gt;-Pnative&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
    We run the native executable with the following command.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;./target/quarkus-hello-world-1.0-SNAPSHOT-runner&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;apham@aplinux quarkus-hello-world]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./target/quarkus-hello-world-1.0-SNAPSHOT-runner
2019-03-17 23:34:04,690 INFO &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus 0.11.0 started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.004s. Listening on: http://127.0.0.1:8080
2019-03-17 23:34:04,691 INFO &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed features: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cdi, resteasy]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
    We can observe here that the boot time is enhanced by a significant order of magnitude which is just a fraction of a millisecond. 
    To be precise 0.4 milliseconds. This is simply an incredible result.
&lt;/p&gt;

&lt;h2&gt;Enhanced Developer Experience&lt;/h2&gt;
&lt;p&gt;
    Now the good surprises don't end there. Since the boot times are so good, it also solve a big challenge for development workflow. 
    In fact, Quarkus also implements a livereload mechanism to reflect the changes performed on the code instantaneously.
    Try to change some of the code in the project, hit Ctrl+s and we can observe how fast the service reloads to take the changes into account.
    This is a big leap for developer productivity. As we can see here it took only 38.6 milliseconds to reload.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;2019-03-18 09:59:58,988 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.dev] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Changes &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files detected, recompiling &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/home/workdrive/TAZONE/WORKSPACES/ws-quarkus/quarkus-camel-first-impressions/src/main/java/techlab/GreetingResource.java]
2019-03-18 09:59:59,274 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus stopped &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.001s
2019-03-18 09:59:59,275 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.dep.QuarkusAugmentor] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Beginning quarkus augmentation
2019-03-18 09:59:59,366 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.dep.QuarkusAugmentor] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus augmentation completed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;91ms
2019-03-18 09:59:59,373 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus 0.11.0 started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.098s. Listening on: http://127.0.0.1:8080
2019-03-18 09:59:59,373 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed features: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cdi, resteasy]
2019-03-18 09:59:59,373 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.dev] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;XNIO-1 task-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Hot replace total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0.386s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2&gt;Let's add Camel to the mix&lt;/h2&gt;
&lt;p&gt;Now that we have our hello world running. Let's try to add Camel to the mix to enable reusable integration patterns
    and connectors in our projects. Quarkus already offers a variety extensions and Camel is one of those. At the time of writing 
    there are just a few extensions available. We won't get the whole set of 200+ Camel components compiled to native executable packages, 
    but I'm quite sure that the Quarkus ecosystem will grow quickly.
&lt;/p&gt;

&lt;p&gt;
    Let's list the available extensions.
&lt;/p&gt;

&lt;pre&gt;mvn quarkus:list-extensions&lt;/pre&gt;
&lt;p&gt;
    Then let's add the camel extension to it.
&lt;/p&gt;
&lt;pre&gt;mvn quarkus:add-extension -Dextensions=io.quarkus:quarkus-camel-core&lt;/pre&gt;

&lt;p&gt;
    As a result you should see the dependency to the quarkus camel extension being added to the pom file
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.quarkus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;quarkus-camel-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
    Lets create a simple class containing a Camel route to see if things work. Add a new class called CamelRouteBuilder to the source folder.
    With the following content.
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;techlab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.camel.builder.RouteBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CamelRouteBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RouteBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;timer://testTimer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At the time of writing there is no documentation on how to get started with camel in Quarkus. 
    I found an error just trying to run this class complaining about properties not being available.&lt;/p&gt;
&lt;pre&gt;Property with key [camel.defer] not found&lt;/pre&gt;

&lt;p&gt;Searching through the source code I found that it is looking some properties in the application.properties file.
    The one file of interest can be found &lt;a href=&quot;https://github.com/quarkusio/quarkus/blob/0.11.0/extensions/camel/camel-core/runtime/src/main/java/io/quarkus/camel/core/runtime/CamelRuntime.java&quot;&gt;here &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update July 4, 2019 : As of today, version 0.18 is out now the camel core plugin has changed and does not require to add those properties anymore&lt;/strong&gt;&lt;p&gt;

&lt;p&gt;
    So lets go ahead and create a file named application.properties in the folder src/main/resources with the following content
&lt;/p&gt;

&lt;pre&gt;
camel.defer=false
camel.conf=
camel.confd=
camel.routesUri=
camel.dump=false
&lt;/pre&gt;

&lt;p&gt;Now we can run our project with &lt;pre&gt;mvn compile quarkus:dev&lt;/pre&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;702&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;qua&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FastCamelContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;Route:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;started&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consuming&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;from:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;timer:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//testTimer&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;771&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;quarkus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Quarkus&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;started&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.509&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Listening&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;on:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//127.0.0.1:8080&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;771&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;quarkus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Installed&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;features:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cdi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resteasy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;720&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Camel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;timer:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//testTimer) test&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;703&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Camel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;timer:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//testTimer) test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;
    We can note that the boot time is a bit higher when including camel, it is now 1.509s.
&lt;/p&gt;

&lt;p&gt;Let's compile it to a native executable and see how it behaves.&lt;/p&gt;

&lt;pre&gt; 
mvn package -Pnative
/target/quarkus-camel-first-impressions-1.0-SNAPSHOT-runner
&lt;/pre&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;2019-03-18 11:05:57,835 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.qua.cam.cor.run.FastCamelContext] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Route: route1 started and consuming from: timer://testTimer
2019-03-18 11:05:57,838 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Quarkus 0.11.0 started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.007s. Listening on: http://127.0.0.1:8080
2019-03-18 11:05:57,838 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;io.quarkus] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed features: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;camel-core, cdi, resteasy]
2019-03-18 11:05:58,835 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;route1] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Camel &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;camel-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; thread &lt;span class=&quot;c&quot;&gt;#0 - timer://testTimer) test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can see that the boot time is a fraction of a millisecond, 0.7 milliseconds which is absolutely amazing!&lt;/p&gt;

&lt;h2&gt;
    In summary, why is Quarkus so amazing ?
&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;Lower boot times with significant orders of magnitude.&lt;/li&gt;
    &lt;li&gt;Puts Java Applications back into the game for efficient scale up in Cloud environments&lt;/li&gt;
    &lt;li&gt;Puts Java Applications back into the game for Functions as a Service, being able to scale down to zero and boot
        up only when required&lt;/li&gt;
    &lt;li&gt;Amazing Developer experience and productivity through fast &quot;Live Reload&quot; capabilities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Other resources&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://quarkus.io/guides/&quot;&gt;Quarkus guides&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://developers.redhat.com/blog/2019/03/07/quarkus-next-generation-kubernetes-native-java-framework/&quot;&gt;Introducing
            Quarkus: a next-generation Kubernetes native Java framework&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://in.relation.to/2019/03/08/why-quarkus/&quot;&gt;Why Quarkus, blog article by Emmanuel Bernard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>http://www.linkedin.com/in/alainpham</name></author><category term="quarkus" /><category term="kubernetes" /><category term="camel" /><summary type="html">On March 07, 2019 Red Hat &amp; the JBoss Community announced Quarkus. It is a Java framework that enables ultra low boot times and tiny memory footprint for applications and services. It does that by taking advantage of GraalVM's native compilation capabilities to produce an executable out of your Java code. Why is this considered to be a game changer ? In this article I will give my view and first impressions on this framework as someone who spends a bit of time writing applications and services. I will get my hands dirty by building a working Quarkus + Apache Camel example.</summary></entry></feed>