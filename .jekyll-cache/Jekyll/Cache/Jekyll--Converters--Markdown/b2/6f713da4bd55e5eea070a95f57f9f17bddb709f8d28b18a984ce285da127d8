I"'<p>장고의 Static 파일에 대해 알아본다. 장고튜토리얼(2)와 이어지는 내용입니다. 이전 내용을 보시지 않았다면 보시고 와주시길 바랍니다.
<!--more--></p>

<h1 id="장고의-static-파일">장고의 Static 파일</h1>
<p>장고에서 Static파일을 이용하는 방법을 알아보도록 하겠습니다. 하지만 실습에 앞서 <code class="highlighter-rouge">Static</code>파일이 무엇이지 알아보고 가도록 하겠습니다.</p>
<h2 id="static-파일이란">Static 파일이란?</h2>
<p>이미지나 CSS, JS파일 처럼 내용이 고정되어 있어, 응답을 할 때 별도의 처리 없이 파일 그대로를 보내주면 되는 파일들을 의미합니다. 즉, 사용자의 요청에 따라 내용이 바뀌는 것이 아니라 있는 파일 그대로를 보내주는 것을 의미합니다.</p>

<h2 id="static-경로-설정">Static 경로 설정</h2>
<p><code class="highlighter-rouge">Static</code> 파일을 이용하기 위해서 가장 중요한 점은 <code class="highlighter-rouge">settings.py</code>에서<code class="highlighter-rouge">django.contrib.staticfiles</code>가 INSTALLED_APPS에 포함되어 있는지 확인하는 것입니다. 기본적으로 포함되어 있지만 안될 때 확인해야할 중요 사항인건 맞습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'garden.apps.GardenConfig'</span><span class="p">,</span>
    <span class="s">'django.contrib.admin'</span><span class="p">,</span>
    <span class="s">'django.contrib.auth'</span><span class="p">,</span>
    <span class="s">'django.contrib.contenttypes'</span><span class="p">,</span>
    <span class="s">'django.contrib.sessions'</span><span class="p">,</span>
    <span class="s">'django.contrib.messages'</span><span class="p">,</span>
    <span class="s">'django.contrib.staticfiles'</span><span class="p">,</span> <span class="c1"># 이게 빠져있어선 안됩니다!
</span>    <span class="s">'posts'</span><span class="p">,</span>
<span class="p">]</span>
<span class="p">...</span>
</code></pre></div></div>
<p>이 앱이 앞으로 우리의 <code class="highlighter-rouge">Static</code>파일들을 관리해 줄 것입니다.
그럼 해당 파일의 가장 밑으로 내려가 보겠습니다.
아마도 이런 코드를 볼 수 있을 것입니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="n">STATIC_URL</span> <span class="o">=</span> <span class="s">'/static/'</span>
</code></pre></div></div>
<p>이 코드는 <code class="highlighter-rouge">Static</code>파일을 불러올 때의 URL을 의미합니다. 만약 <code class="highlighter-rouge">profile.jpg</code>라는 이미지가 있다면</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://127.0.0.1:8000/static/profile.jpg
</code></pre></div></div>
<p>위와 같은 url을 통해 이미지 주소가 만들어 지게 됩니다.
이 <code class="highlighter-rouge">STATIC_URL</code>아래에 다음과 같은 코드를 추가해 봅니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">STATIC_ROOT</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">'staticfiles'</span><span class="p">)</span>
</code></pre></div></div>
<p>위 코드는 <code class="highlighter-rouge">Static</code>파일들이 모이는 경로를 정해주는 것입니다. 이 경우 <code class="highlighter-rouge">python manage.py collectstatic</code>이라는 명령어를 입력할 경우 <code class="highlighter-rouge">staticfiles</code>라는 폴더로 <code class="highlighter-rouge">Static</code>파일들이 모이게 될 것입니다.</p>

<p>그 아래에는 다음과 같은 코드를 추가해 봅니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">STATICFILES_DIRS</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">'posts'</span><span class="p">,</span> <span class="s">'static'</span><span class="p">),</span>
<span class="p">)</span>
</code></pre></div></div>
<p>위 코드는 <code class="highlighter-rouge">posts</code>라는 앱 안의 <code class="highlighter-rouge">static</code>폴더를 경로에 추가해 준 것입니다. 이러한 작업을 안할 경우 <code class="highlighter-rouge">python manage.py collectstatic</code>을 하였을 때 이 경로에 없는 폴더는 <code class="highlighter-rouge">Static</code>파일을 모으지 않게 됩니다. 그래서 이 코드를 반드시 추가해 주어야합니다.</p>

<h2 id="static-파일-사용">Static 파일 사용</h2>
<h3 id="posts앱-안에-static폴더를-생성해줍니다"><code class="highlighter-rouge">posts</code>앱 안에 <code class="highlighter-rouge">static</code>폴더를 생성해줍니다.</h3>
<ul>
  <li><code class="highlighter-rouge">static</code>폴더 이름은 이미 우리가 위에서 정해주었습니다.</li>
  <li><code class="highlighter-rouge">static</code>폴더 안에 <code class="highlighter-rouge">posts</code>폴더를 생성하고 <code class="highlighter-rouge">posts</code>폴더 안에 <code class="highlighter-rouge">css</code>폴더를 생성해줍니다.
<img src="/assets/images/posts/django-static/static.png" class="img-responsive" />
    <h4 id="위와-같이-폴더가-생성되어-있어야-합니다">위와 같이 폴더가 생성되어 있어야 합니다.</h4>
    <h4 id="이제-css폴더에-indexcss를-복사-붙여넣기를-해줍니다">이제 <code class="highlighter-rouge">css</code>폴더에 <code class="highlighter-rouge">index.css</code>를 복사 붙여넣기를 해줍니다.</h4>
    <p><img src="/assets/images/posts/django-static/css.png" class="img-responsive" /></p>
    <h4 id="위와-같이-파일을-추가해-줍니다">위와 같이 파일을 추가해 줍니다.</h4>
    <h3 id="indexhtml코드-바꾸어-주기"><code class="highlighter-rouge">index.html</code>코드 바꾸어 주기</h3>
  </li>
  <li>
    <h4 id="indexhtml가장-위-첫번째-줄에-다음-코드를-작성해-줍니다"><code class="highlighter-rouge">index.html</code>가장 위 첫번째 줄에 다음 코드를 작성해 줍니다.</h4>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% load static %}
...
</code></pre></div></div>

<ul>
  <li>
    <h4 id="그리고-css-가져오기라고-써져있는-글-아래의-코드를-바꾸어-줍니다">그리고 css 가져오기라고 써져있는 글 아래의 코드를 바꾸어 줍니다.</h4>
    <p>```html
…</p>
  </li>
</ul>
<link rel="stylesheet" href="index.css" />

<p>…</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#### 위 코드를 다음과 같은 코드로 바꾸어 줍니다.

```html
...
&lt;link rel="stylesheet" href="{% static 'post/css/index.css' %}"&gt;
...
</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">static</code>폴더 아래의 경로를 적어주면 되는 것 입니다.</li>
  <li>위 작업을 끝냈다면 서버를 실행 했을 때 다음과 같은 화면이 나올 것 입니다.
<img src="/assets/images/posts/django-static/result.png" class="img-responsive" /></li>
</ul>

:ET